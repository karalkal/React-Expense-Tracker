{"ast":null,"code":"var _jsxFileName = \"/home/kk/GitHub/React-Expense-Tracker/src/components/Expenses/ExpenseItem.js\";\nimport React from 'react';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  /*\n  // In this version we are storing the original data in localStorage as json \n  // (to enable addition of new expenses as we cannot write in the original data file from the browser)\n  // Then we use this json to render all components, hence our date is now just a simple string we need to split\n  const expenseDateObj = {\n    month: props.date.toLocaleString('en-US', { month: 'long' }),\n    day: props.date.toLocaleString('en-US', { day: '2-digit' }),\n    year: props.date.getFullYear()\n  };\n  */\n\n  const dateStr = props.date.split(\"-\");\n  const dateObj = new Date(dateStr[0], dateStr[1], dateStr[2].slice(0, 2));\n  console.log(dateObj);\n  // new Date(year, month, day)\n\n  const expenseDateObj = {\n    month: dateObj.toLocaleString('en-US', {\n      month: 'long'\n    }),\n    day: dateObj.toLocaleString('en-US', {\n      day: '2-digit'\n    }),\n    year: dateObj.getFullYear()\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-date__month\",\n        children: expenseDateObj.month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-date__year\",\n        children: expenseDateObj.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-date__day\",\n        children: expenseDateObj.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","ExpenseItem","props","dateStr","date","split","dateObj","Date","slice","console","log","expenseDateObj","month","toLocaleString","day","year","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","amount","_c","$RefreshReg$"],"sources":["/home/kk/GitHub/React-Expense-Tracker/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React from 'react';\n\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  /*\n  // In this version we are storing the original data in localStorage as json \n  // (to enable addition of new expenses as we cannot write in the original data file from the browser)\n  // Then we use this json to render all components, hence our date is now just a simple string we need to split\n  const expenseDateObj = {\n    month: props.date.toLocaleString('en-US', { month: 'long' }),\n    day: props.date.toLocaleString('en-US', { day: '2-digit' }),\n    year: props.date.getFullYear()\n  };\n  */\n\n  const dateStr = props.date.split(\"-\")\n  const dateObj = new Date(dateStr[0], dateStr[1], dateStr[2].slice(0, 2))\n  console.log(dateObj)\n  // new Date(year, month, day)\n\n  const expenseDateObj = {\n    month: dateObj.toLocaleString('en-US', { month: 'long' }),\n    day: dateObj.toLocaleString('en-US', { day: '2-digit' }),\n    year: dateObj.getFullYear()\n  };\n\n  return (\n    <Card className='expense-item'>\n      <div className='expense-date'>\n        <div className='expense-date__month'>{expenseDateObj.month}</div>\n        <div className='expense-date__year'>{expenseDateObj.year}</div>\n        <div className='expense-date__day'>{expenseDateObj.day}</div>\n      </div>\n\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACrC,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACxEC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACpB;;EAEA,MAAMK,cAAc,GAAG;IACrBC,KAAK,EAAEN,OAAO,CAACO,cAAc,CAAC,OAAO,EAAE;MAAED,KAAK,EAAE;IAAO,CAAC,CAAC;IACzDE,GAAG,EAAER,OAAO,CAACO,cAAc,CAAC,OAAO,EAAE;MAAEC,GAAG,EAAE;IAAU,CAAC,CAAC;IACxDC,IAAI,EAAET,OAAO,CAACU,WAAW;EAC3B,CAAC;EAED,oBACEhB,OAAA,CAACF,IAAI;IAACmB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5BlB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlB,OAAA;QAAKiB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEP,cAAc,CAACC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACjEtB,OAAA;QAAKiB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEP,cAAc,CAACI;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC/DtB,OAAA;QAAKiB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAEP,cAAc,CAACG;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzD,eAENtB,OAAA;MAAKiB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxClB,OAAA;QAAAkB,QAAA,EAAKhB,KAAK,CAACqB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACtBtB,OAAA;QAAKiB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,GAAC,EAAChB,KAAK,CAACsB,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAAG,EAAA,GArCKxB,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}