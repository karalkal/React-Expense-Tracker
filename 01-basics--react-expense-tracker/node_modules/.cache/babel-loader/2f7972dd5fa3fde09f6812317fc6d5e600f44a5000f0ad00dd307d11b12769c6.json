{"ast":null,"code":"var _jsxFileName = \"/home/kk/GitHub/React-Schwarzmueller-Course/01-basics--react-expense-tracker/src/components/Expenses/ExpenseItem.js\";\nimport React from 'react';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  /*\n  In this version we are storing the original data in localStorage as json \n  (to enable addition of new expenses as we cannot write in the original data file from the browser)\n  Then we use this json to render all components (and re-render when localStorage is updated).\n  Since our date is now just a simple string we need to split it, \n  create Date object from it and then from this object we derive \n  a new one with day, month, year props (of course both objects could be merged but this is easier to grasp)\n  */\n\n  const dateAsArr = props.date.split(\"-\");\n  const dateObj = new Date(dateAsArr[0], dateAsArr[1], dateAsArr[2].slice(0, 2)); //(year, month, day)\n  const expenseDateObj = {\n    day: dateObj.toLocaleString('en-US', {\n      day: '2-digit'\n    }),\n    month: dateObj.toLocaleString('en-US', {\n      month: 'long'\n    }),\n    year: dateObj.getFullYear()\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-date__month\",\n        children: expenseDateObj.month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-date__year\",\n        children: expenseDateObj.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-date__day\",\n        children: expenseDateObj.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","ExpenseItem","props","dateAsArr","date","split","dateObj","Date","slice","expenseDateObj","day","toLocaleString","month","year","getFullYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","amount","_c","$RefreshReg$"],"sources":["/home/kk/GitHub/React-Schwarzmueller-Course/01-basics--react-expense-tracker/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React from 'react';\n\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  /*\n  In this version we are storing the original data in localStorage as json \n  (to enable addition of new expenses as we cannot write in the original data file from the browser)\n  Then we use this json to render all components (and re-render when localStorage is updated).\n  Since our date is now just a simple string we need to split it, \n  create Date object from it and then from this object we derive \n  a new one with day, month, year props (of course both objects could be merged but this is easier to grasp)\n  */\n\n  const dateAsArr = props.date.split(\"-\")\n  const dateObj = new Date(dateAsArr[0], dateAsArr[1], dateAsArr[2].slice(0, 2))  //(year, month, day)\n  const expenseDateObj = {\n    day: dateObj.toLocaleString('en-US', { day: '2-digit' }),\n    month: dateObj.toLocaleString('en-US', { month: 'long' }),\n    year: dateObj.getFullYear()\n  };\n\n  return (\n    <Card className='expense-item'>\n      <div className='expense-date'>\n        <div className='expense-date__month'>{expenseDateObj.month}</div>\n        <div className='expense-date__year'>{expenseDateObj.year}</div>\n        <div className='expense-date__day'>{expenseDateObj.day}</div>\n      </div>\n\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACvC,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;EAChF,MAAMC,cAAc,GAAG;IACrBC,GAAG,EAAEJ,OAAO,CAACK,cAAc,CAAC,OAAO,EAAE;MAAED,GAAG,EAAE;IAAU,CAAC,CAAC;IACxDE,KAAK,EAAEN,OAAO,CAACK,cAAc,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC;IACzDC,IAAI,EAAEP,OAAO,CAACQ,WAAW;EAC3B,CAAC;EAED,oBACEd,OAAA,CAACF,IAAI;IAACiB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5BhB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhB,OAAA;QAAKe,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEP,cAAc,CAACG;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACjEpB,OAAA;QAAKe,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEP,cAAc,CAACI;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC/DpB,OAAA;QAAKe,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAEP,cAAc,CAACC;MAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzD,eAENpB,OAAA;MAAKe,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxChB,OAAA;QAAAgB,QAAA,EAAKd,KAAK,CAACmB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACtBpB,OAAA;QAAKe,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,GAAC,EAACd,KAAK,CAACoB,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAAG,EAAA,GAhCKtB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}