{"ast":null,"code":"var _jsxFileName = \"/home/kk/GitHub/React-Expense-Tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport initialExpensesData from './data.js';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  localStorage.setItem(\"expenses\", JSON.stringify(initialExpensesData));\n  // Lazy initialization (runs only first render) by providing callback function rather variable \n  // WILL NOT WORK HERE\n  const [expensesInLocalStorage, setExpensesInLocalStorage] = React.useState(() => JSON.parse(localStorage.getItem(\"expenses\")));\n  const addExpenseHandler = expense => {\n    localStorage.setItem(\"expenses\", JSON.stringify(...initialExpensesData, expense));\n    console.log('In App.js');\n    console.log(expense);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expensesInLocalStorage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"v2xtjPHkWXV99Ox4Qa1dX4z1jFo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","initialExpensesData","NewExpense","Expenses","jsxDEV","_jsxDEV","App","_s","localStorage","setItem","JSON","stringify","expensesInLocalStorage","setExpensesInLocalStorage","useState","parse","getItem","addExpenseHandler","expense","console","log","children","onAddExpense","fileName","_jsxFileName","lineNumber","columnNumber","items","_c","$RefreshReg$"],"sources":["/home/kk/GitHub/React-Expense-Tracker/src/App.js"],"sourcesContent":["import React from 'react';\nimport initialExpensesData from './data.js'\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\n\nconst App = () => {\n\n  localStorage.setItem(\"expenses\", JSON.stringify(initialExpensesData))\n  // Lazy initialization (runs only first render) by providing callback function rather variable \n  // WILL NOT WORK HERE\n  const [expensesInLocalStorage, setExpensesInLocalStorage] = React.useState(() => JSON.parse(localStorage.getItem(\"expenses\")))\n\n  const addExpenseHandler = expense => {\n    localStorage.setItem(\"expenses\", JSON.stringify(\n      ...initialExpensesData, expense))\n\n\n    console.log('In App.js');\n    console.log(expense);\n  };\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expensesInLocalStorage} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,WAAW;AAE3C,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACV,mBAAmB,CAAC,CAAC;EACrE;EACA;EACA,MAAM,CAACW,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,MAAMJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;EAE9H,MAAMC,iBAAiB,GAAGC,OAAO,IAAI;IACnCV,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAC7C,GAAGV,mBAAmB,EAAEiB,OAAO,CAAC,CAAC;IAGnCC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACtB,CAAC;EAGD,oBACEb,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACH,UAAU;MAACoB,YAAY,EAAEL;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/CrB,OAAA,CAACF,QAAQ;MAACwB,KAAK,EAAEf;IAAuB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvC;AAEV,CAAC;AAAAnB,EAAA,CAvBKD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}