{"ast":null,"code":"var _jsxFileName = \"/home/kk/GitHub/React-Expense-Tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport initialExpensesData from './data.js';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  localStorage.setItem(\"expenses\", JSON.stringify(initialExpensesData));\n  const [expensesInLocalStorage, setExpensesInLocalStorage] = React.useState(localStorage.getItem(\"expenses\"));\n\n  // In initialExpensesData date is Date\n  // But is stored in localStorage as date:\"2020-08-13T23:00:00.000Z\"\n  // After parsing expensesInLocalStorage date remains string\n  // Hence we need to stringify date of new entry before adding it to array\n  // console.log(initialExpensesData)\n  // console.log(JSON.parse(expensesInLocalStorage))\n\n  const addExpenseHandler = expense => {\n    console.log(expense);\n    const newExpense = {\n      ...expense,\n      date: JSON.stringify(expense.date)\n    };\n    console.log(newExpense.date, JSON.parse(expensesInLocalStorage)[2].date);\n    let prevExpArr = localStorage.getItem(\"expenses\");\n    let newExpArr = [expense, ...expensesInLocalStorage];\n    console.log(prevExpArr);\n    console.log(newExpArr);\n    setExpensesInLocalStorage(JSON.stringify(newExpArr));\n    console.log('In App.js');\n    console.log(expense);\n    console.log(expensesInLocalStorage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: JSON.parse(expensesInLocalStorage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NStkyGzxeDxh5HmOijZG39wEAks=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","initialExpensesData","NewExpense","Expenses","jsxDEV","_jsxDEV","App","_s","localStorage","setItem","JSON","stringify","expensesInLocalStorage","setExpensesInLocalStorage","useState","getItem","addExpenseHandler","expense","console","log","newExpense","date","parse","prevExpArr","newExpArr","children","onAddExpense","fileName","_jsxFileName","lineNumber","columnNumber","items","_c","$RefreshReg$"],"sources":["/home/kk/GitHub/React-Expense-Tracker/src/App.js"],"sourcesContent":["import React from 'react';\nimport initialExpensesData from './data.js'\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\n\nconst App = () => {\n  localStorage.setItem(\"expenses\", JSON.stringify(initialExpensesData));\n\n  const [expensesInLocalStorage, setExpensesInLocalStorage] =\n    React.useState(localStorage.getItem(\"expenses\"));\n\n  // In initialExpensesData date is Date\n  // But is stored in localStorage as date:\"2020-08-13T23:00:00.000Z\"\n  // After parsing expensesInLocalStorage date remains string\n  // Hence we need to stringify date of new entry before adding it to array\n  // console.log(initialExpensesData)\n  // console.log(JSON.parse(expensesInLocalStorage))\n\n\n  const addExpenseHandler = expense => {\n    console.log(expense)\n    const newExpense = {\n      ...expense,\n      date: JSON.stringify(expense.date)\n    }\n    console.log(newExpense.date, JSON.parse(expensesInLocalStorage)[2].date)\n\n\n    let prevExpArr = localStorage.getItem(\"expenses\");\n    let newExpArr = [expense, ...expensesInLocalStorage]\n\n    console.log(prevExpArr)\n    console.log(newExpArr)\n\n    setExpensesInLocalStorage(JSON.stringify(newExpArr))\n\n\n\n\n    console.log('In App.js');\n    console.log(expense);\n    console.log(expensesInLocalStorage);\n  };\n\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={JSON.parse(expensesInLocalStorage)} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,WAAW;AAE3C,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACV,mBAAmB,CAAC,CAAC;EAErE,MAAM,CAACW,sBAAsB,EAAEC,yBAAyB,CAAC,GACvDb,KAAK,CAACc,QAAQ,CAACN,YAAY,CAACO,OAAO,CAAC,UAAU,CAAC,CAAC;;EAElD;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAMC,iBAAiB,GAAGC,OAAO,IAAI;IACnCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,MAAMG,UAAU,GAAG;MACjB,GAAGH,OAAO;MACVI,IAAI,EAAEX,IAAI,CAACC,SAAS,CAACM,OAAO,CAACI,IAAI;IACnC,CAAC;IACDH,OAAO,CAACC,GAAG,CAACC,UAAU,CAACC,IAAI,EAAEX,IAAI,CAACY,KAAK,CAACV,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAACS,IAAI,CAAC;IAGxE,IAAIE,UAAU,GAAGf,YAAY,CAACO,OAAO,CAAC,UAAU,CAAC;IACjD,IAAIS,SAAS,GAAG,CAACP,OAAO,EAAE,GAAGL,sBAAsB,CAAC;IAEpDM,OAAO,CAACC,GAAG,CAACI,UAAU,CAAC;IACvBL,OAAO,CAACC,GAAG,CAACK,SAAS,CAAC;IAEtBX,yBAAyB,CAACH,IAAI,CAACC,SAAS,CAACa,SAAS,CAAC,CAAC;IAKpDN,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpBC,OAAO,CAACC,GAAG,CAACP,sBAAsB,CAAC;EACrC,CAAC;EAGD,oBACEP,OAAA;IAAAoB,QAAA,gBACEpB,OAAA,CAACH,UAAU;MAACwB,YAAY,EAAEV;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC/CzB,OAAA,CAACF,QAAQ;MAAC4B,KAAK,EAAErB,IAAI,CAACY,KAAK,CAACV,sBAAsB;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAEV,CAAC;AAAAvB,EAAA,CA9CKD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}